apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-core
  labels:
    app: gateway-core
    version: 1.0.0-alpha
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway-core
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  template:
    metadata:
      labels:
        app: gateway-core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/prometheus"
    spec:
      containers:
        - name: gateway
          image: ws-gateway:1.0.0-alpha
          imagePullPolicy: Never
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "756Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /health
              port: api
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 15
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /health
              port: api
            initialDelaySeconds: 60
            timeoutSeconds: 2
            periodSeconds: 5
          env:
            - name: APP_OPTS
              valueFrom:
                configMapKeyRef:
                  name: gateway-core-config
                  key: gateway.appOptions
            - name: GATEWAY_KUBERNETES_SERVICENAME
              valueFrom:
                configMapKeyRef:
                  name: gateway-core-config
                  key: gateway.kubernetesService
            - name: GATEWAY_KUBERNETES_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: gateway-core-config
                  key: gateway.kubernetesNamespace
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: gateway-core-config
                  key: gateway.javaOpts
          ports:
            - name: api
              containerPort: 8080
            - name: websocket
              containerPort: 8081
            - name: ignite
              containerPort: 47100
              protocol: TCP
            - name: ignitediscovery
              containerPort: 47500
              protocol: TCP